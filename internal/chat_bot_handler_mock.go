// Code generated by MockGen. DO NOT EDIT.
// Source: chat_bot_handler.go

// Package internal is a generated GoMock package.
package internal

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockChatBotHandler is a mock of ChatBotHandler interface.
type MockChatBotHandler struct {
	ctrl     *gomock.Controller
	recorder *MockChatBotHandlerMockRecorder
}

// MockChatBotHandlerMockRecorder is the mock recorder for MockChatBotHandler.
type MockChatBotHandlerMockRecorder struct {
	mock *MockChatBotHandler
}

// NewMockChatBotHandler creates a new mock instance.
func NewMockChatBotHandler(ctrl *gomock.Controller) *MockChatBotHandler {
	mock := &MockChatBotHandler{ctrl: ctrl}
	mock.recorder = &MockChatBotHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockChatBotHandler) EXPECT() *MockChatBotHandlerMockRecorder {
	return m.recorder
}

// Push mocks base method.
func (m *MockChatBotHandler) Push(jobsInfo *JobsInfo) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Push", jobsInfo)
	ret0, _ := ret[0].(error)
	return ret0
}

// Push indicates an expected call of Push.
func (mr *MockChatBotHandlerMockRecorder) Push(jobsInfo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Push", reflect.TypeOf((*MockChatBotHandler)(nil).Push), jobsInfo)
}
